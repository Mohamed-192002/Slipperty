@model Slipperty.Areas.Admin.Controllers.OrdersController.OrderDetailsVm?
<div class="modal fade" id="OrderDetailModifyProductModal" data-Id="@Model.Id" data-CombinationId="@Model.CombinationDto.Id" tabindex="-1" role="dialog"   >
    <div class="modal-dialog modal-dialog-centered justify-content-center mainLayout" role="document">
        <div class="modal-content">
            <div class="modal-body" style="padding-top:10px !important;">
                <div>
                    <div class="carousel-inner">
                        <div class="carousel-item active">
                            <img src="@((Model?.ProductDto?.MainImageUrl != null && Model.ProductDto?.MainImageUrl != "") ? Url.Content($"~/{ImagesPathes.Products}{Model?.ProductDto?.MainImageUrl}") : Url.Content($"~{ImagesPathes.DefaultImage}"))" class="d-block w-100 product-image" alt="Product Image">
                        </div>
                        @if (Model?.ProductDto?.ProductImages != null)
                        {
                            foreach (var image in Model?.ProductDto?.ProductImages)
                            {
                                @if (image.ImageUrl != Model?.ProductDto?.MainImageUrl)
                                {
                                    <div class="carousel-item">
                                        <img src="@Url.Content($" /{ImagesPathes.Products}{image.ImageUrl}")" class="d-block w-100 product-image" alt="Product Image">
                                    </div>
                                }
                            }
                        }
                    </div>
                    <div id="order-detail-modify-product-modal-data-container-id" class="d-flex flex-wrap gap-2">
                        @foreach (var productVariable in Model?.ProductDto?.ProductVariables)
                        {
                            <div class="d-flex align-items-center gap-2">
                                <div class="section-title orange-text productVariableName">@productVariable.Name: </div>
                                @if (productVariable.VariableValues != null)
                                {
                                    <div class="d-flex justify-content-center combinationValue" data-variable-name="@productVariable.Name">
                                        @foreach (var variable in productVariable.VariableValues)
                                        {
                                           var isValid =  Model?.CombinationDto?.Text?.Split(",").Where(_ => _.Split(":")[0].Trim().Equals(productVariable.Name))?.Select(_ => _.Split(":")[1])?.FirstOrDefault()?.Trim() == variable?.Value;

                                           <button class="option-btn @(isValid ? "btn-primary text-white selected-value" : "")" data-VarailbeName="@productVariable.Name" onclick="setCombinationValue(this)">
                                               @variable.Value
                                           </button>

                                        }
                                    </div>
                                }
                            </div>
                        }
                        <div class="col-sm-6  d-flex align-items-center ">
                            <label style="width: 150px">الكمية : </label>
                            <button class="btn btn-outline-primary plusandmins " onclick="decreaseQuantity(this);checkAvailability()">-</button>
                            <input type="number" id="quantityInput" class="form-control text-center mx-2 quantity-input" value="@Model.Qty" min="1" >
                            <button class="btn btn-outline-primary plusandmins" onclick="increaseQuantity(this);checkAvailability()">+</button>
                        </div>

                    </div>
                </div>
                <div class="d-flex justify-content-center align-items-start p-2">
                    <a class="btn btn-primary order-btn" modal-id="OrderDetailModifyProductModal" modal-data-container-id="order-detail-modify-product-modal-data-container-id" ActionType="@Convert.ToInt32(ActionType.ModifiedProduct)" onclick="OrderModifiedProduct('order-detail-modify-product-modal-data-container-id')">تأكيد</a>
                </div>

            </div>
        </div>
    </div>
</div>
<script>

        function setCombinationValue(clickedButton) {
            var combinationValueDiv = clickedButton.closest('.combinationValue');
            var buttons = combinationValueDiv.querySelectorAll('button');
            buttons.forEach(function (button) {
                button.classList.remove('btn-primary', 'text-white', 'selected-value');
            });
            clickedButton.classList.add('btn-primary', 'text-white' , 'selected-value');
        }

        function increaseQuantity(button) {
            const input = button.previousElementSibling;
            const currentValue = parseInt(input.value);
            input.value = currentValue + 1;
        }

        function decreaseQuantity(button) {
            const input = button.nextElementSibling;
            const currentValue = parseInt(input.value);
            if (currentValue > 1) {
                input.value = currentValue - 1;
            }
        }

        function OrderModifiedProduct(modalDataContainerId){
            let CombinationText = "";
            $(`#${modalDataContainerId} button.selected-value`).each((index, val) => {
                debugger;
                let $val = $(val); 
                CombinationText +=  $val.data("varailbename") + ":"  +  $val.html().trim() +  ",";
            });
            if (CombinationText.endsWith(",")) {
                CombinationText = CombinationText.slice(0, -1);
            }
            let obj = {
                Text : CombinationText,
                Qty : $("#quantityInput").val(), 
                Id : @Model.Id,
                CombinationId : @Model?.CombinationDto?.Id 
            }
            performOrderAction(obj , 'OrderDetailModifyProductModal', GetOrderCardDetail); 
        }


        function performOrderAction(requestData, modalId, loadCallBackFunction = () => {}) {
            $.ajax({
                url: `/ModifiyOrderDetailProduct/${@Model.OrderId}`,
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify(requestData),
                success: function(response) {
                    showToast("تمت العملية بنجاح", "success");
                    $(`#${modalId}`).modal('hide');
                    loadCallBackFunction();
                },
                error: function(xhr) {
                    showToast("حاول مرة أخرى", "error");
                    console.error("Error:", xhr.responseText);
                }
            });
        }

        function showToast(message, type) {
            toastr.options = {
                positionClass: 'toast-top-right'
            };
            toastr[type](message);
        }



</script>